(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{588:function(e,t,o){"use strict";o.r(t);var r=o(1),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"breaking-changes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#breaking-changes"}},[e._v("#")]),e._v(" Breaking Changes")]),e._v(" "),o("p",[e._v("This document collects all of the "),o("em",[e._v("breaking changes")]),e._v(" from the CHANGELOG.md files\nlocated in the "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tendermint"),o("OutboundLink")],1),e._v(", "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cosmos SDK"),o("OutboundLink")],1),e._v(",\nand "),o("a",{attrs:{href:"https://github.com/cosmos/gaia",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gaia"),o("OutboundLink")],1),e._v(" Github repositories.")]),e._v(" "),o("p",[e._v("Its purpose is to provide a checklist for potential impact on deployments; however, the changelog located in each repository\nserves other important details, such as bug fixes and feature improvements.")]),e._v(" "),o("h2",{attrs:{id:"table-of-contents"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[e._v("#")]),e._v(" Table of Contents")]),e._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"#tendermint-changelog"}},[e._v("Tendermint Changelog")]),e._v("; Tendermint versions v0.32.13 - v0.34.1")]),e._v(" "),o("li",[o("a",{attrs:{href:"#cosmos-sdk-changelog"}},[e._v("Cosmos Changelog")]),e._v("; Cosmos SDK versions v0.37.14 - v0.40.0")])]),e._v(" "),o("h1",{attrs:{id:"tendermint-changelog"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#tendermint-changelog"}},[e._v("#")]),e._v(" Tendermint Changelog")]),e._v(" "),o("h2",{attrs:{id:"v0-34-1"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-34-1"}},[e._v("#")]),e._v(" v0.34.1")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("CLI/RPC/Config")]),e._v(" "),o("ul",[o("li",[e._v("[cli] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/5786",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5786"),o("OutboundLink")],1),e._v(" deprecate snake_case commands for hyphen-case (@cmwaters)")])])]),e._v(" "),o("li",[o("p",[e._v("Go API")]),e._v(" "),o("ul",[o("li",[e._v("[libs/protoio] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/5868",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5868"),o("OutboundLink")],1),e._v(" Return number of bytes read in "),o("code",[e._v("Reader.ReadMsg()")]),e._v(" (@erikgrinaker)")])])])]),e._v(" "),o("h2",{attrs:{id:"v0-34-0"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-34-0"}},[e._v("#")]),e._v(" v0.34.0")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("CLI/RPC/Config")]),e._v(" "),o("ul",[o("li",[e._v("[config] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5315",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5315"),o("OutboundLink")],1),e._v(" Rename "),o("code",[e._v("prof_laddr")]),e._v(" to "),o("code",[e._v("pprof_laddr")]),e._v(" and move it to "),o("code",[e._v("rpc")]),e._v(" section (@melekes)")]),e._v(" "),o("li",[e._v("[evidence] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4959",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4959"),o("OutboundLink")],1),e._v(" Add JSON tags to "),o("code",[e._v("DuplicateVoteEvidence")]),e._v(" (@marbar3778)")]),e._v(" "),o("li",[e._v("[light] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4946",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4946"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("tendermint lite")]),e._v(" command has been renamed to "),o("code",[e._v("tendermint light")]),e._v(" (@marbar3778)")]),e._v(" "),o("li",[e._v("[privval] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4582",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4582"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("round")]),e._v(" in private_validator_state.json is no longer JSON string; instead it is a number (@marbar3778)")]),e._v(" "),o("li",[e._v("[rpc] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4792",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4792"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("/validators")]),e._v(" are now sorted by voting power (@melekes)")]),e._v(" "),o("li",[e._v("[rpc] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4947",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4947"),o("OutboundLink")],1),e._v(" Return an error when "),o("code",[e._v("page")]),e._v(" pagination param is 0 in "),o("code",[e._v("/validators")]),e._v(", "),o("code",[e._v("tx_search")]),e._v(" (@melekes)")]),e._v(" "),o("li",[e._v("[rpc] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5137",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5137"),o("OutboundLink")],1),e._v(" JSON tags of "),o("code",[e._v("gasWanted")]),e._v(" and "),o("code",[e._v("gasUsed")]),e._v(" in "),o("code",[e._v("ResponseCheckTx")]),e._v(" and "),o("code",[e._v("ResponseDeliverTx")]),e._v(" have been made snake_case ("),o("code",[e._v("gas_wanted")]),e._v(" and "),o("code",[e._v("gas_used")]),e._v(") (@marbar3778)")]),e._v(" "),o("li",[e._v("[rpc] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5315",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5315"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("/unsafe_start_cpu_profiler")]),e._v(", "),o("code",[e._v("/unsafe_stop_cpu_profiler")]),e._v(" and "),o("code",[e._v("/unsafe_write_heap_profile")]),e._v(". Please use pprof functionality instead (@melekes)")]),e._v(" "),o("li",[e._v("[rpc/client, rpc/jsonrpc/client] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5347",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5347"),o("OutboundLink")],1),e._v(" All client methods now accept "),o("code",[e._v("context.Context")]),e._v(" as 1st param (@melekes)")])])]),e._v(" "),o("li",[o("p",[e._v("Apps")]),e._v(" "),o("ul",[o("li",[e._v("[abci] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4704",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4704"),o("OutboundLink")],1),e._v(" Add ABCI methods "),o("code",[e._v("ListSnapshots")]),e._v(", "),o("code",[e._v("LoadSnapshotChunk")]),e._v(", "),o("code",[e._v("OfferSnapshot")]),e._v(", and "),o("code",[e._v("ApplySnapshotChunk")]),e._v(" for state sync snapshots. "),o("code",[e._v("ABCIVersion")]),e._v(" bumped to 0.17.0. (@erikgrinaker)")]),e._v(" "),o("li",[e._v("[abci] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4989",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4989"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("Proof")]),e._v(" within "),o("code",[e._v("ResponseQuery")]),e._v(" has been renamed to "),o("code",[e._v("ProofOps")]),e._v("  (@marbar3778)")]),e._v(" "),o("li",[e._v("[abci] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5096",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5096"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("CheckTxType")]),e._v(" Protobuf enum names are now uppercase, to follow Protobuf style guide (@erikgrinaker)")]),e._v(" "),o("li",[e._v("[abci] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5324",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5324"),o("OutboundLink")],1),e._v(" ABCI evidence type is now an enum with two types of possible evidence (@cmwaters)")])])]),e._v(" "),o("li",[o("p",[e._v("P2P Protocol")]),e._v(" "),o("ul",[o("li",[e._v("[blockchain] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4637",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4637"),o("OutboundLink")],1),e._v(" Migrate blockchain reactor(s) to Protobuf encoding (@marbar3778)")]),e._v(" "),o("li",[e._v("[evidence] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4949",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4949"),o("OutboundLink")],1),e._v(" Migrate evidence reactor to Protobuf encoding (@marbar3778)")]),e._v(" "),o("li",[e._v("[mempool] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4940",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4940"),o("OutboundLink")],1),e._v(" Migrate mempool from to Protobuf encoding (@marbar3778)")]),e._v(" "),o("li",[e._v("[mempool] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5321",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5321"),o("OutboundLink")],1),e._v(" Batch transactions when broadcasting them to peers (@melekes)\n"),o("ul",[o("li",[o("code",[e._v("MaxBatchBytes")]),e._v(" new config setting defines the max size of one batch.")])])]),e._v(" "),o("li",[e._v("[p2p/pex] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4973",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4973"),o("OutboundLink")],1),e._v(" Migrate "),o("code",[e._v("p2p/pex")]),e._v(" reactor to Protobuf encoding (@marbar3778)")]),e._v(" "),o("li",[e._v("[statesync] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4943",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4943"),o("OutboundLink")],1),e._v(" Migrate state sync reactor to Protobuf encoding (@marbar3778)")])])]),e._v(" "),o("li",[o("p",[e._v("Blockchain Protocol")]),e._v(" "),o("ul",[o("li",[e._v("[evidence] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4725",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4725"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("Pubkey")]),e._v(" from "),o("code",[e._v("DuplicateVoteEvidence")]),e._v(" (@marbar3778)")]),e._v(" "),o("li",[e._v("[evidence] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5449",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5499"),o("OutboundLink")],1),e._v(" Cap evidence to a maximum number of bytes (supercedes "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4780",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4780"),o("OutboundLink")],1),e._v(") (@cmwaters)")]),e._v(" "),o("li",[e._v("[merkle] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5193",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5193"),o("OutboundLink")],1),e._v(" Header hashes are no longer empty for empty inputs, notably "),o("code",[e._v("DataHash")]),e._v(", "),o("code",[e._v("EvidenceHash")]),e._v(", and "),o("code",[e._v("LastResultsHash")]),e._v(" (@erikgrinaker)")]),e._v(" "),o("li",[e._v("[state] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4845",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4845"),o("OutboundLink")],1),e._v(" Include "),o("code",[e._v("GasWanted")]),e._v(" and "),o("code",[e._v("GasUsed")]),e._v(" into "),o("code",[e._v("LastResultsHash")]),e._v(" (@melekes)")]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4792",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4792"),o("OutboundLink")],1),e._v(" Sort validators by voting power to enable faster commit verification (@melekes)")])])]),e._v(" "),o("li",[o("p",[e._v("On-disk serialization")]),e._v(" "),o("ul",[o("li",[e._v("[state] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4679",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4679"),o("OutboundLink")],1),e._v(" Migrate state module to Protobuf encoding (@marbar3778)\n"),o("ul",[o("li",[o("code",[e._v("BlockStoreStateJSON")]),e._v(" is now "),o("code",[e._v("BlockStoreState")]),e._v(" and is encoded as binary in the database")])])]),e._v(" "),o("li",[e._v("[store] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4778",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4778"),o("OutboundLink")],1),e._v(" Migrate store module to Protobuf encoding (@marbar3778)")])])]),e._v(" "),o("li",[o("p",[e._v("Light client, private validator")]),e._v(" "),o("ul",[o("li",[e._v("[light] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4964",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4964"),o("OutboundLink")],1),e._v(" Migrate light module migration to Protobuf encoding (@marbar3778)")]),e._v(" "),o("li",[e._v("[privval] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4985",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4985"),o("OutboundLink")],1),e._v(" Migrate "),o("code",[e._v("privval")]),e._v(" module to Protobuf encoding (@marbar3778)")])])]),e._v(" "),o("li",[o("p",[e._v("Go API")]),e._v(" "),o("ul",[o("li",[e._v("[consensus] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4582",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4582"),o("OutboundLink")],1),e._v(" RoundState: "),o("code",[e._v("Round")]),e._v(", "),o("code",[e._v("LockedRound")]),e._v(" & "),o("code",[e._v("CommitRound")]),e._v(" are now "),o("code",[e._v("int32")]),e._v(" (@marbar3778)")]),e._v(" "),o("li",[e._v("[consensus] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4582",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4582"),o("OutboundLink")],1),e._v(" HeightVoteSet: "),o("code",[e._v("round")]),e._v(" is now "),o("code",[e._v("int32")]),e._v(" (@marbar3778)")]),e._v(" "),o("li",[e._v("[crypto] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4721",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4721"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("SimpleHashFromMap()")]),e._v(" and "),o("code",[e._v("SimpleProofsFromMap()")]),e._v(" (@erikgrinaker)")]),e._v(" "),o("li",[e._v("[crypto] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4940",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4940"),o("OutboundLink")],1),e._v(" All keys have become "),o("code",[e._v("[]byte")]),e._v(" instead of "),o("code",[e._v("[<size>]byte")]),e._v(". The byte method no longer returns the marshaled value but just the "),o("code",[e._v("[]byte")]),e._v(" form of the data. (@marbar3778)")]),e._v(" "),o("li",[e._v("[crypto] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4988",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4988"),o("OutboundLink")],1),e._v(" Removal of key type multisig (@marbar3778)\n"),o("ul",[o("li",[e._v("The key has been moved to the "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/master/crypto/types/multisig/multisignature.go",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cosmos-SDK"),o("OutboundLink")],1)])])]),e._v(" "),o("li",[e._v("[crypto] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4989",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4989"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("Simple")]),e._v(" prefixes from "),o("code",[e._v("SimpleProof")]),e._v(", "),o("code",[e._v("SimpleValueOp")]),e._v(" & "),o("code",[e._v("SimpleProofNode")]),e._v(". (@marbar3778)\n"),o("ul",[o("li",[o("code",[e._v("merkle.Proof")]),e._v(" has been renamed to "),o("code",[e._v("ProofOps")]),e._v(".")]),e._v(" "),o("li",[e._v("Protobuf messages "),o("code",[e._v("Proof")]),e._v(" & "),o("code",[e._v("ProofOp")]),e._v(" has been moved to "),o("code",[e._v("proto/crypto/merkle")])]),e._v(" "),o("li",[o("code",[e._v("SimpleHashFromByteSlices")]),e._v(" has been renamed to "),o("code",[e._v("HashFromByteSlices")])]),e._v(" "),o("li",[o("code",[e._v("SimpleHashFromByteSlicesIterative")]),e._v(" has been renamed to "),o("code",[e._v("HashFromByteSlicesIterative")])]),e._v(" "),o("li",[o("code",[e._v("SimpleProofsFromByteSlices")]),e._v(" has been renamed to "),o("code",[e._v("ProofsFromByteSlices")])])])]),e._v(" "),o("li",[e._v("[crypto] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4941",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4941"),o("OutboundLink")],1),e._v(" Remove suffixes from all keys. (@marbar3778)\n"),o("ul",[o("li",[e._v("ed25519: type "),o("code",[e._v("PrivKeyEd25519")]),e._v(" is now "),o("code",[e._v("PrivKey")])]),e._v(" "),o("li",[e._v("ed25519: type "),o("code",[e._v("PubKeyEd25519")]),e._v(" is now "),o("code",[e._v("PubKey")])]),e._v(" "),o("li",[e._v("secp256k1: type"),o("code",[e._v("PrivKeySecp256k1")]),e._v(" is now "),o("code",[e._v("PrivKey")])]),e._v(" "),o("li",[e._v("secp256k1: type"),o("code",[e._v("PubKeySecp256k1")]),e._v(" is now "),o("code",[e._v("PubKey")])]),e._v(" "),o("li",[e._v("sr25519: type "),o("code",[e._v("PrivKeySr25519")]),e._v(" is now "),o("code",[e._v("PrivKey")])]),e._v(" "),o("li",[e._v("sr25519: type "),o("code",[e._v("PubKeySr25519")]),e._v(" is now "),o("code",[e._v("PubKey")])])])]),e._v(" "),o("li",[e._v("[crypto] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5214",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5214"),o("OutboundLink")],1),e._v(" Change "),o("code",[e._v("GenPrivKeySecp256k1")]),e._v(" to "),o("code",[e._v("GenPrivKeyFromSecret")]),e._v(" to be consistent with other keys (@marbar3778)")]),e._v(" "),o("li",[e._v("[crypto] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5236",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5236"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("VerifyBytes")]),e._v(" is now "),o("code",[e._v("VerifySignature")]),e._v(" on the "),o("code",[e._v("crypto.PubKey")]),e._v(" interface (@marbar3778)")]),e._v(" "),o("li",[e._v("[evidence] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5361",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5361"),o("OutboundLink")],1),e._v(" Add LightClientAttackEvidence and change evidence interface (@cmwaters)")]),e._v(" "),o("li",[e._v("[libs] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4831",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4831"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("Bech32")]),e._v(" pkg from Tendermint. This pkg now lives in the "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/tree/4173ea5ebad906dd9b45325bed69b9c655504867/types/bech32",target:"_blank",rel:"noopener noreferrer"}},[e._v("cosmos-sdk"),o("OutboundLink")],1),e._v(" (@marbar3778)")]),e._v(" "),o("li",[e._v("[light] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4946",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4946"),o("OutboundLink")],1),e._v(" Rename "),o("code",[e._v("lite2")]),e._v(" pkg to "),o("code",[e._v("light")]),e._v(". Remove "),o("code",[e._v("lite")]),e._v(" implementation. (@marbar3778)")]),e._v(" "),o("li",[e._v("[light] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5347",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5347"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("NewClient")]),e._v(", "),o("code",[e._v("NewHTTPClient")]),e._v(", "),o("code",[e._v("VerifyHeader")]),e._v(" and "),o("code",[e._v("VerifyLightBlockAtHeight")]),e._v(" now accept "),o("code",[e._v("context.Context")]),e._v(" as 1st param (@melekes)")]),e._v(" "),o("li",[e._v("[merkle] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5193",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5193"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("HashFromByteSlices")]),e._v(" and "),o("code",[e._v("ProofsFromByteSlices")]),e._v(" now return a hash for empty inputs, following RFC6962 (@erikgrinaker)")]),e._v(" "),o("li",[e._v("[proto] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5025",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5025"),o("OutboundLink")],1),e._v(" All proto files have been moved to "),o("code",[e._v("/proto")]),e._v(" directory. (@marbar3778)\n"),o("ul",[o("li",[e._v("Using the recommended the file layout from buf, "),o("a",{attrs:{href:"https://buf.build/docs/lint-checkers#file_layout",target:"_blank",rel:"noopener noreferrer"}},[e._v("see here for more info"),o("OutboundLink")],1)])])]),e._v(" "),o("li",[e._v("[rpc/client] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4947",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4947"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("Validators")]),e._v(", "),o("code",[e._v("TxSearch")]),e._v(" "),o("code",[e._v("page")]),e._v("/"),o("code",[e._v("per_page")]),e._v(" params become pointers (@melekes)\n"),o("ul",[o("li",[o("code",[e._v("UnconfirmedTxs")]),e._v(" "),o("code",[e._v("limit")]),e._v(" param is a pointer")])])]),e._v(" "),o("li",[e._v("[rpc/jsonrpc/server] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5141",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5141"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("WriteRPCResponseArrayHTTP")]),e._v(" (use "),o("code",[e._v("WriteRPCResponseHTTP")]),e._v(" instead) (@melekes)")]),e._v(" "),o("li",[e._v("[state] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4679",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4679"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("TxResult")]),e._v(" is a Protobuf type defined in "),o("code",[e._v("abci")]),e._v(" types directory (@marbar3778)")]),e._v(" "),o("li",[e._v("[state] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5191",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5191"),o("OutboundLink")],1),e._v(" Add "),o("code",[e._v("State.InitialHeight")]),e._v(" field to record initial block height, must be "),o("code",[e._v("1")]),e._v(" (not "),o("code",[e._v("0")]),e._v(") to start from 1 (@erikgrinaker)")]),e._v(" "),o("li",[e._v("[state] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5231",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5231"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("LoadStateFromDBOrGenesisFile()")]),e._v(" and "),o("code",[e._v("LoadStateFromDBOrGenesisDoc()")]),e._v(" no longer saves the state in the database if not found, the genesis state is simply returned (@erikgrinaker)")]),e._v(" "),o("li",[e._v("[state] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5348",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5348"),o("OutboundLink")],1),e._v(" Define an Interface for the state store. (@marbar3778)")]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4939",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4939"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("SignedMsgType")]),e._v(" has moved to a Protobuf enum types (@marbar3778)")]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4962",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4962"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("ConsensusParams")]),e._v(", "),o("code",[e._v("BlockParams")]),e._v(", "),o("code",[e._v("EvidenceParams")]),e._v(", "),o("code",[e._v("ValidatorParams")]),e._v(" & "),o("code",[e._v("HashedParams")]),e._v(" are now Protobuf types (@marbar3778)")]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4852",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4852"),o("OutboundLink")],1),e._v(" Vote & Proposal "),o("code",[e._v("SignBytes")]),e._v(" is now func "),o("code",[e._v("VoteSignBytes")]),e._v(" & "),o("code",[e._v("ProposalSignBytes")]),e._v(" (@marbar3778)")]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4798",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4798"),o("OutboundLink")],1),e._v(" Simplify "),o("code",[e._v("VerifyCommitTrusting")]),e._v(" func + remove extra validation (@melekes)")]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4845",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4845"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("ABCIResult")]),e._v(" (@melekes)")]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/5029",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5029"),o("OutboundLink")],1),e._v(" Rename all values from "),o("code",[e._v("PartsHeader")]),e._v(" to "),o("code",[e._v("PartSetHeader")]),e._v(" to have consistency (@marbar3778)")]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4939",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4939"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("Total")]),e._v(" in "),o("code",[e._v("Parts")]),e._v(" & "),o("code",[e._v("PartSetHeader")]),e._v(" has been changed from a "),o("code",[e._v("int")]),e._v(" to a "),o("code",[e._v("uint32")]),e._v(" (@marbar3778)")]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4939",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4939"),o("OutboundLink")],1),e._v(" Vote: "),o("code",[e._v("ValidatorIndex")]),e._v(" & "),o("code",[e._v("Round")]),e._v(" are now "),o("code",[e._v("int32")]),e._v(" (@marbar3778)")]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4939",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4939"),o("OutboundLink")],1),e._v(" Proposal: "),o("code",[e._v("POLRound")]),e._v(" & "),o("code",[e._v("Round")]),e._v(" are now "),o("code",[e._v("int32")]),e._v(" (@marbar3778)")]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4939",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4939"),o("OutboundLink")],1),e._v(" Block: "),o("code",[e._v("Round")]),e._v(" is now "),o("code",[e._v("int32")]),e._v(" (@marbar3778)")])])])]),e._v(" "),o("h2",{attrs:{id:"v0-33-8"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-33-8"}},[e._v("#")]),e._v(" v0.33.8")]),e._v(" "),o("h2",{attrs:{id:"v0-33-7"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-33-7"}},[e._v("#")]),e._v(" v0.33.7")]),e._v(" "),o("h2",{attrs:{id:"v0-33-6"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-33-6"}},[e._v("#")]),e._v(" v0.33.6")]),e._v(" "),o("p",[o("strong",[e._v("Please note that the fix for the False Witness issue renames the "),o("code",[e._v("VerifyCommitTrusting")]),e._v("\nfunction to "),o("code",[e._v("VerifyCommitLightTrusting")]),e._v(". If you were relying on the light client, you may\nneed to update your code.")])]),e._v(" "),o("h2",{attrs:{id:"v0-33-5"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-33-5"}},[e._v("#")]),e._v(" v0.33.5")]),e._v(" "),o("h3",{attrs:{id:"breaking-changes-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#breaking-changes-2"}},[e._v("#")]),e._v(" BREAKING CHANGES:")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("Go API")]),e._v(" "),o("ul",[o("li",[e._v("[privval] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4744",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4744"),o("OutboundLink")],1),e._v(" Remove deprecated "),o("code",[e._v("OldFilePV")]),e._v(" (@melekes)")]),e._v(" "),o("li",[e._v("[mempool] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4759",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4759"),o("OutboundLink")],1),e._v(" Modify "),o("code",[e._v("Mempool#InitWAL")]),e._v(" to return an error (@melekes)")]),e._v(" "),o("li",[e._v("[node] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4832",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4832"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("ConfigureRPC")]),e._v(" returns an error (@melekes)")]),e._v(" "),o("li",[e._v("[rpc] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4836",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4836"),o("OutboundLink")],1),e._v(" Overhaul "),o("code",[e._v("lib")]),e._v(" folder (@melekes)\nMove lib/ folder to jsonrpc/.\nRename:\nrpc package -> jsonrpc package\nrpcclient package -> client package\nrpcserver package -> server package\nJSONRPCClient to Client\nJSONRPCRequestBatch to RequestBatch\nJSONRPCCaller to Caller\nStartHTTPServer to Serve\nStartHTTPAndTLSServer to ServeTLS\nNewURIClient to NewURI\nNewJSONRPCClient to New\nNewJSONRPCClientWithHTTPClient to NewWithHTTPClient\nNewWSClient to NewWS\nUnexpose ResponseWriterWrapper\nRemove unused http_params.go")])])])]),e._v(" "),o("h2",{attrs:{id:"v0-33-4"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-33-4"}},[e._v("#")]),e._v(" v0.33.4")]),e._v(" "),o("ul",[o("li",[e._v("Nodes are no longer guaranteed to contain all blocks up to the latest height. The ABCI app can now control which blocks to retain through the ABCI field "),o("code",[e._v("ResponseCommit.retain_height")]),e._v(", all blocks and associated data below this height will be removed.")])]),e._v(" "),o("h3",{attrs:{id:"breaking-changes-3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#breaking-changes-3"}},[e._v("#")]),e._v(" BREAKING CHANGES:")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("Go API")]),e._v(" "),o("ul",[o("li",[e._v("[lite2] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4616",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4616"),o("OutboundLink")],1),e._v(" Make "),o("code",[e._v("maxClockDrift")]),e._v(" an option "),o("code",[e._v("Verify/VerifyAdjacent/VerifyNonAdjacent")]),e._v(" now accept "),o("code",[e._v("maxClockDrift time.Duration")]),e._v(" (@melekes).")]),e._v(" "),o("li",[e._v("[rpc/client] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4628",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4628"),o("OutboundLink")],1),e._v(" Split out HTTP and local clients into "),o("code",[e._v("http")]),e._v(" and "),o("code",[e._v("local")]),e._v(" packages (@erikgrinaker).")])])])]),e._v(" "),o("h2",{attrs:{id:"v0-33-3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-33-3"}},[e._v("#")]),e._v(" v0.33.3")]),e._v(" "),o("h2",{attrs:{id:"v0-33-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-33-2"}},[e._v("#")]),e._v(" v0.33.2")]),e._v(" "),o("h3",{attrs:{id:"breaking-changes-4"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#breaking-changes-4"}},[e._v("#")]),e._v(" BREAKING CHANGES:")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("CLI/RPC/Config")]),e._v(" "),o("ul",[o("li",[e._v("[cli] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4505",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4505"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("tendermint lite")]),e._v(" sub-command new syntax (@melekes):\n"),o("code",[e._v("lite cosmoshub-3 -p 52.57.29.196:26657 -w public-seed-node.cosmoshub.certus.one:26657 --height 962118 --hash 28B97BE9F6DE51AC69F70E0B7BFD7E5C9CD1A595B7DC31AFF27C50D4948")])])])]),e._v(" "),o("li",[o("p",[e._v("Go API")]),e._v(" "),o("ul",[o("li",[e._v("[lite2] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4535",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4535"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("Start/Stop")]),e._v(" (@melekes)")]),e._v(" "),o("li",[e._v("[lite2] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4469",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4469"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("RemoveNoLongerTrustedHeaders")]),e._v(" and "),o("code",[e._v("RemoveNoLongerTrustedHeadersPeriod")]),e._v(" option (@cmwaters)")]),e._v(" "),o("li",[e._v("[lite2] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4473",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4473"),o("OutboundLink")],1),e._v(" Return height as a 2nd param in "),o("code",[e._v("TrustedValidatorSet")]),e._v(" (@melekes)")]),e._v(" "),o("li",[e._v("[lite2] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4536",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4536"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("Update")]),e._v(" returns a signed header (1st param) (@melekes)")])])])]),e._v(" "),o("h2",{attrs:{id:"v0-33-1"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-33-1"}},[e._v("#")]),e._v(" v0.33.1")]),e._v(" "),o("h2",{attrs:{id:"v0-33"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-33"}},[e._v("#")]),e._v(" v0.33")]),e._v(" "),o("p",[e._v("This release contains breaking changes to the "),o("code",[e._v("Block#Header")]),e._v(", specifically\n"),o("code",[e._v("NumTxs")]),e._v(" and "),o("code",[e._v("TotalTxs")]),e._v(" were removed (#2521). Here's how this change affects\ndifferent modules:")]),e._v(" "),o("ul",[o("li",[e._v("apps: it breaks the ABCI header field numbering")]),e._v(" "),o("li",[e._v("state: it breaks the format of "),o("code",[e._v("State")]),e._v(" on disk")]),e._v(" "),o("li",[e._v("RPC: all RPC requests which expose the header broke")]),e._v(" "),o("li",[e._v("Go API: the "),o("code",[e._v("Header")]),e._v(" broke")]),e._v(" "),o("li",[e._v("P2P: since blocks go over the wire, technically the P2P protocol broke")])]),e._v(" "),o("h3",{attrs:{id:"breaking-changes-5"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#breaking-changes-5"}},[e._v("#")]),e._v(" BREAKING CHANGES:")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("CLI/RPC/Config")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("[rpc] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/3471",target:"_blank",rel:"noopener noreferrer"}},[e._v("#3471"),o("OutboundLink")],1),e._v(" Paginate "),o("code",[e._v("/validators")]),e._v(" response (default: 30 vals per page)")])]),e._v(" "),o("li",[o("p",[e._v("[rpc] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/3188",target:"_blank",rel:"noopener noreferrer"}},[e._v("#3188"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("BlockMeta")]),e._v(" in "),o("code",[e._v("ResultBlock")]),e._v(" in favor of "),o("code",[e._v("BlockId")]),e._v(" for "),o("code",[e._v("/block")])])]),e._v(" "),o("li",[o("p",[e._v("[rpc] "),o("code",[e._v("/block_results")]),e._v(" response format updated (see RPC docs for details)")]),e._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"ewogICZxdW90O2pzb25ycGMmcXVvdDs6ICZxdW90OzIuMCZxdW90OywKICAmcXVvdDtpZCZxdW90OzogJnF1b3Q7JnF1b3Q7LAogICZxdW90O3Jlc3VsdCZxdW90OzogewogICAgJnF1b3Q7aGVpZ2h0JnF1b3Q7OiAmcXVvdDsyMTA5JnF1b3Q7LAogICAgJnF1b3Q7dHhzX3Jlc3VsdHMmcXVvdDs6IG51bGwsCiAgICAmcXVvdDtiZWdpbl9ibG9ja19ldmVudHMmcXVvdDs6IG51bGwsCiAgICAmcXVvdDtlbmRfYmxvY2tfZXZlbnRzJnF1b3Q7OiBudWxsLAogICAgJnF1b3Q7dmFsaWRhdG9yX3VwZGF0ZXMmcXVvdDs6IG51bGwsCiAgICAmcXVvdDtjb25zZW5zdXNfcGFyYW1fdXBkYXRlcyZxdW90OzogbnVsbAogIH0KfQo="}})],1),e._v(" "),o("li",[o("p",[e._v("[rpc] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4141",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4141"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("#event")]),e._v(" suffix from the ID in event responses.\n"),o("code",[e._v('{"jsonrpc": "2.0", "id": 0, "result": ...}')])])]),e._v(" "),o("li",[o("p",[e._v("[rpc] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4141",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4141"),o("OutboundLink")],1),e._v(" Switch to integer IDs instead of "),o("code",[e._v("json-client-XYZ")])]),e._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"aWQ9MCBtZXRob2Q9L3N1YnNjcmliZQppZD0wIHJlc3VsdD0uLi4KaWQ9MSBtZXRob2Q9L2FiY2lfcXVlcnkKaWQ9MSByZXN1bHQ9Li4uCg=="}}),e._v(" "),o("ul",[o("li",[e._v("ID is unique for each request;")]),e._v(" "),o("li",[e._v('Request.ID is now optional. Notification is a Request without an ID. Previously ID="" or ID=0 were considered as notifications.')])])],1),e._v(" "),o("li",[o("p",[e._v("[config] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4046",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4046"),o("OutboundLink")],1),e._v(" Rename tag(s) to CompositeKey & places where tag is still present it was renamed to event or events. Find how a compositeKey is constructed "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/blob/6d05c531f7efef6f0619155cf10ae8557dd7832f/docs/app-dev/indexing-transactions.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),o("OutboundLink")],1)]),e._v(" "),o("ul",[o("li",[e._v("You will have to generate a new config for your Tendermint node(s)")])])]),e._v(" "),o("li",[o("p",[e._v("[genesis] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/2565",target:"_blank",rel:"noopener noreferrer"}},[e._v("#2565"),o("OutboundLink")],1),e._v(" Add "),o("code",[e._v("consensus_params.evidence.max_age_duration")]),e._v(". Rename\n"),o("code",[e._v("consensus_params.evidence.max_age")]),e._v(" to "),o("code",[e._v("max_age_num_blocks")]),e._v(".")])]),e._v(" "),o("li",[o("p",[e._v("[cli] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/1771",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1771"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("tendermint lite")]),e._v(" now uses new light client package ("),o("code",[e._v("lite2")]),e._v(")\nand has 3 more flags: "),o("code",[e._v("--trusting-period")]),e._v(", "),o("code",[e._v("--trusted-height")]),e._v(" and\n"),o("code",[e._v("--trusted-hash")])])])])]),e._v(" "),o("li",[o("p",[e._v("Apps")]),e._v(" "),o("ul",[o("li",[e._v("[tm-bench] Removed tm-bench in favor of "),o("a",{attrs:{href:"https://github.com/informalsystems/tm-load-test",target:"_blank",rel:"noopener noreferrer"}},[e._v("tm-load-test"),o("OutboundLink")],1)])])]),e._v(" "),o("li",[o("p",[e._v("Go API")]),e._v(" "),o("ul",[o("li",[e._v("[rpc] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/3953",target:"_blank",rel:"noopener noreferrer"}},[e._v("#3953"),o("OutboundLink")],1),e._v(" Modify NewHTTP, NewXXXClient functions to return an error on invalid remote instead of panicking (@mrekucci)")]),e._v(" "),o("li",[e._v("[rpc/client] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/3471",target:"_blank",rel:"noopener noreferrer"}},[e._v("#3471"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("Validators")]),e._v(" now requires two more args: "),o("code",[e._v("page")]),e._v(" and "),o("code",[e._v("perPage")])]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/3262",target:"_blank",rel:"noopener noreferrer"}},[e._v("#3262"),o("OutboundLink")],1),e._v(" Make error the last parameter of "),o("code",[e._v("Task")]),e._v(" (@PSalant726)")]),e._v(" "),o("li",[e._v("[cs/types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/3262",target:"_blank",rel:"noopener noreferrer"}},[e._v("#3262"),o("OutboundLink")],1),e._v(" Rename "),o("code",[e._v("GotVoteFromUnwantedRoundError")]),e._v(" to "),o("code",[e._v("ErrGotVoteFromUnwantedRound")]),e._v(" (@PSalant726)")]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/3862",target:"_blank",rel:"noopener noreferrer"}},[e._v("#3862"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("errors.go")]),e._v(" from "),o("code",[e._v("libs/common")])]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4230",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4230"),o("OutboundLink")],1),e._v(" Move "),o("code",[e._v("KV")]),e._v(" out of common to its own pkg")]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4230",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4230"),o("OutboundLink")],1),e._v(" Rename "),o("code",[e._v("cmn.KVPair(s)")]),e._v(" to "),o("code",[e._v("kv.Pair(s)")]),e._v("s")]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4232",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4232"),o("OutboundLink")],1),e._v(" Move "),o("code",[e._v("Service")]),e._v(" & "),o("code",[e._v("BaseService")]),e._v(" from "),o("code",[e._v("libs/common")]),e._v(" to "),o("code",[e._v("libs/service")])]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4232",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4232"),o("OutboundLink")],1),e._v(" Move "),o("code",[e._v("common/nil.go")]),e._v(" to "),o("code",[e._v("types/utils.go")]),e._v(" & make the functions private")]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4231",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4231"),o("OutboundLink")],1),e._v(" Move random functions from "),o("code",[e._v("libs/common")]),e._v(" into pkg "),o("code",[e._v("rand")])]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4237",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4237"),o("OutboundLink")],1),e._v(" Move byte functions from "),o("code",[e._v("libs/common")]),e._v(" into pkg "),o("code",[e._v("bytes")])]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4237",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4237"),o("OutboundLink")],1),e._v(" Move throttletimer functions from "),o("code",[e._v("libs/common")]),e._v(" into pkg "),o("code",[e._v("timer")])]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4237",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4237"),o("OutboundLink")],1),e._v(" Move tempfile functions from "),o("code",[e._v("libs/common")]),e._v(" into pkg "),o("code",[e._v("tempfile")])]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4240",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4240"),o("OutboundLink")],1),e._v(" Move os functions from "),o("code",[e._v("libs/common")]),e._v(" into pkg "),o("code",[e._v("os")])]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4240",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4240"),o("OutboundLink")],1),e._v(" Move net functions from "),o("code",[e._v("libs/common")]),e._v(" into pkg "),o("code",[e._v("net")])]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4240",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4240"),o("OutboundLink")],1),e._v(" Move mathematical functions and types out of "),o("code",[e._v("libs/common")]),e._v(" to "),o("code",[e._v("math")]),e._v(" pkg")]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4240",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4240"),o("OutboundLink")],1),e._v(" Move string functions out of "),o("code",[e._v("libs/common")]),e._v(" to "),o("code",[e._v("strings")]),e._v(" pkg")]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4240",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4240"),o("OutboundLink")],1),e._v(" Move async functions out of "),o("code",[e._v("libs/common")]),e._v(" to "),o("code",[e._v("async")]),e._v(" pkg")]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4240",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4240"),o("OutboundLink")],1),e._v(" Move bit functions out of "),o("code",[e._v("libs/common")]),e._v(" to "),o("code",[e._v("bits")]),e._v(" pkg")]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4240",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4240"),o("OutboundLink")],1),e._v(" Move cmap functions out of "),o("code",[e._v("libs/common")]),e._v(" to "),o("code",[e._v("cmap")]),e._v(" pkg")]),e._v(" "),o("li",[e._v("[libs/common] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/4258",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4258"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("Rand")]),e._v(" from all "),o("code",[e._v("rand")]),e._v(" pkg functions")]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/2565",target:"_blank",rel:"noopener noreferrer"}},[e._v("#2565"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("MockBadEvidence")]),e._v(" & "),o("code",[e._v("MockGoodEvidence")]),e._v(" in favor of "),o("code",[e._v("MockEvidence")])])])]),e._v(" "),o("li",[o("p",[e._v("Blockchain Protocol")]),e._v(" "),o("ul",[o("li",[e._v("[abci] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/2521",target:"_blank",rel:"noopener noreferrer"}},[e._v("#2521"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("TotalTxs")]),e._v(" and "),o("code",[e._v("NumTxs")]),e._v(" from "),o("code",[e._v("Header")])]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/4151",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4151"),o("OutboundLink")],1),e._v(" Enforce ordering of votes in DuplicateVoteEvidence to be lexicographically sorted on BlockID")]),e._v(" "),o("li",[e._v("[types] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/1648",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1648"),o("OutboundLink")],1),e._v(" Change "),o("code",[e._v("Commit")]),e._v(" to consist of just signatures")])])]),e._v(" "),o("li",[o("p",[e._v("P2P Protocol")]),e._v(" "),o("ul",[o("li",[e._v("[p2p] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/3668",target:"_blank",rel:"noopener noreferrer"}},[e._v("#3668"),o("OutboundLink")],1),e._v(" Make "),o("code",[e._v("SecretConnection")]),e._v(" non-malleable")])])]),e._v(" "),o("li",[o("p",[e._v("[proto] "),o("a",{attrs:{href:"https://github.com/tendermint/tendermint/pull/3986",target:"_blank",rel:"noopener noreferrer"}},[e._v("#3986"),o("OutboundLink")],1),e._v(" Prefix protobuf types to avoid name conflicts.")]),e._v(" "),o("ul",[o("li",[e._v("ABCI becomes "),o("code",[e._v("tendermint.abci.types")]),e._v(" with the new API endpoint "),o("code",[e._v("/tendermint.abci.types.ABCIApplication/")])]),e._v(" "),o("li",[e._v("core_grpc becomes "),o("code",[e._v("tendermint.rpc.grpc")]),e._v(" with the new API endpoint "),o("code",[e._v("/tendermint.rpc.grpc.BroadcastAPI/")])]),e._v(" "),o("li",[e._v("merkle becomes "),o("code",[e._v("tendermint.crypto.merkle")])]),e._v(" "),o("li",[e._v("libs.common becomes "),o("code",[e._v("tendermint.libs.common")])]),e._v(" "),o("li",[e._v("proto3 becomes "),o("code",[e._v("tendermint.types.proto3")])])])])]),e._v(" "),o("h2",{attrs:{id:"v0-32-13"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-32-13"}},[e._v("#")]),e._v(" v0.32.13")]),e._v(" "),o("h1",{attrs:{id:"cosmos-sdk-changelog"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cosmos-sdk-changelog"}},[e._v("#")]),e._v(" Cosmos SDK Changelog")]),e._v(" "),o("h2",{attrs:{id:"v0-41-0-from-release-notes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-41-0-from-release-notes"}},[e._v("#")]),e._v(" v0.41.0 - From release notes")]),e._v(" "),o("p",[e._v("Support Amino JSON for IBC MsgTransfer\nThis change breaks state backward compatibility.")]),e._v(" "),o("p",[e._v("At the moment hardware wallets are unable to sign messages using SIGN_MODE_DIRECT because the cosmos ledger app does not support proto encoding andSIGN_MODE_TEXTUAL is not available yet.")]),e._v(" "),o("p",[e._v("In order to enable hardware wallets users to interact with IBC, amino JSON support was added to MsgTransfer only.")]),e._v(" "),o("p",[e._v("Counterparty.ChannelID not available in OnChanOpenAck callback implementation.\nThis change breaks state backward compatibility.")]),e._v(" "),o("p",[e._v("In a previous version the Counterparty.ChannelID was available for an OnChanOpenAck callback implementation (read via channelKeeper.GetChannel(). Due to a regression, the channelID is currently empty.")]),e._v(" "),o("p",[e._v("The issue has been fixed by reordering IBC ChanOpenAck and ChanOpenConfirm to execute the core handlers logic first, followed by application callbacks.")]),e._v(" "),o("p",[e._v("It breaks state backward compatibility because the current change consumes more gas, which means that in an updated node a TX might fail because it ran out of gas whilst in older versions it would be successful.")]),e._v(" "),o("h2",{attrs:{id:"v0-40-0-2021-01-08"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-40-0-2021-01-08"}},[e._v("#")]),e._v(" "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.40.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("v0.40.0"),o("OutboundLink")],1),e._v(" - 2021-01-08")]),e._v(" "),o("p",[e._v("v0.40.0, known as the Stargate release of the Cosmos SDK, is one of the largest releases\nof the Cosmos SDK since launch. Please read through this changelog and "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/RELEASE_NOTES.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("release notes"),o("OutboundLink")],1),e._v(" to make\nsure you are aware of any relevant breaking changes.")]),e._v(" "),o("h3",{attrs:{id:"client-breaking-changes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#client-breaking-changes"}},[e._v("#")]),e._v(" Client Breaking Changes")]),e._v(" "),o("ul",[o("li",[o("strong",[e._v("CLI")]),e._v(" "),o("ul",[o("li",[e._v("(client/keys) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5889",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5889"),o("OutboundLink")],1),e._v(" remove "),o("code",[e._v("keys update")]),e._v(" command.")]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5844",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5844"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("tx sign")]),e._v(" command now returns an error when signing is attempted with offline/multisig keys.")]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6108",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6108"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("tx sign")]),e._v(" command's "),o("code",[e._v("--validate-signatures")]),e._v(" flag is migrated into a "),o("code",[e._v("tx validate-signatures")]),e._v(" standalone command.")]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7788",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7788"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("tx auth")]),e._v(" subcommands, all auth subcommands exist as "),o("code",[e._v("tx <subcommand>")])]),e._v(" "),o("li",[e._v("(x/genutil) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6651",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6651"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("gentx")]),e._v(" command has been improved. No longer are "),o("code",[e._v("--from")]),e._v(" and "),o("code",[e._v("--name")]),e._v(" flags required. Instead, a single argument, "),o("code",[e._v("name")]),e._v(", is required which refers to the key pair in the Keyring. In addition, an optional\n"),o("code",[e._v("--moniker")]),e._v(" flag can be provided to override the moniker found in "),o("code",[e._v("config.toml")]),e._v(".")]),e._v(" "),o("li",[e._v("(x/upgrade) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7697",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7697"),o("OutboundLink")],1),e._v(' Rename flag name "--time" to "--upgrade-time", "--info" to "--upgrade-info", to keep it consistent with help message.')])])]),e._v(" "),o("li",[o("strong",[e._v("REST / Queriers")]),e._v(" "),o("ul",[o("li",[e._v("(api) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6426",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6426"),o("OutboundLink")],1),e._v(" The ability to start an out-of-process API REST server has now been removed. Instead, the API server is now started in-process along with the application and Tendermint. Configuration options have been added to "),o("code",[e._v("app.toml")]),e._v(" to enable/disable the API server along with additional HTTP server options.")]),e._v(" "),o("li",[e._v("(client) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7246",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7246"),o("OutboundLink")],1),e._v(" The rest server endpoint "),o("code",[e._v("/swagger-ui/")]),e._v(" is replaced by "),o("code",[e._v("/swagger/")]),e._v(", and contains swagger documentation for gRPC Gateway routes in addition to legacy REST routes. Swagger API is exposed only if set in "),o("code",[e._v("app.toml")]),e._v(".")]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5702",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5702"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("x/auth")]),e._v(" querier route has changed from "),o("code",[e._v('"acc"')]),e._v(" to "),o("code",[e._v('"auth"')]),e._v(".")]),e._v(" "),o("li",[e._v("(x/bank) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5572",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5572"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("/bank/balances/{address}")]),e._v(" endpoint now returns all account balances or a single balance by denom when the "),o("code",[e._v("denom")]),e._v(" query parameter is present.")]),e._v(" "),o("li",[e._v("(x/evidence) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5952",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5952"),o("OutboundLink")],1),e._v(" Remove CLI and REST handlers for querying "),o("code",[e._v("x/evidence")]),e._v(" parameters.")]),e._v(" "),o("li",[e._v("(x/gov) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6295",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6295"),o("OutboundLink")],1),e._v(" Fix typo in querying governance params.")])])]),e._v(" "),o("li",[o("strong",[e._v("General")]),e._v(" "),o("ul",[o("li",[e._v("(baseapp) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6384",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6384"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("Result.Data")]),e._v(" is now a Protocol Buffer encoded binary blob of type "),o("code",[e._v("TxData")]),e._v(". The "),o("code",[e._v("TxData")]),e._v(" contains "),o("code",[e._v("Data")]),e._v(" which contains a list of Protocol Buffer encoded message data and the corresponding message type.")]),e._v(" "),o("li",[e._v("(client) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/5783",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5783"),o("OutboundLink")],1),e._v(" Unify all coins representations on JSON client requests for governance proposals.")]),e._v(" "),o("li",[e._v("(crypto) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7419",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7419"),o("OutboundLink")],1),e._v(" The SDK doesn't use Tendermint's "),o("code",[e._v("crypto.PubKey")]),e._v("\ninterface anymore, and uses instead it's own "),o("code",[e._v("PubKey")]),e._v(" interface, defined in "),o("code",[e._v("crypto/types")]),e._v(". Replace all instances of\n"),o("code",[e._v("crypto.PubKey")]),e._v(" by "),o("code",[e._v("cryptotypes.Pubkey")]),e._v(".")]),e._v(" "),o("li",[e._v("(store/rootmulti) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6390",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6390"),o("OutboundLink")],1),e._v(" Proofs of empty stores are no longer supported.")]),e._v(" "),o("li",[e._v("(store/types) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5730",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5730"),o("OutboundLink")],1),e._v(" store.types.Cp() is removed in favour of types.CopyBytes().")]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6054",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6054"),o("OutboundLink")],1),e._v(" Remove custom JSON marshaling for base accounts as multsigs cannot be bech32 decoded.")]),e._v(" "),o("li",[e._v("(x/auth/vesting) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6859",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6859"),o("OutboundLink")],1),e._v(" Custom JSON marshaling of vesting accounts was removed. Vesting accounts are now marshaled using their default proto or amino JSON representation.")]),e._v(" "),o("li",[e._v("(x/bank) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/5785",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5785"),o("OutboundLink")],1),e._v(" In x/bank errors, JSON strings coerced to valid UTF-8 bytes at JSON marshalling time\nare now replaced by human-readable expressions. This change can potentially break compatibility with all those client side tools\nthat parse log messages.")]),e._v(" "),o("li",[e._v("(x/evidence) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7538",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7538"),o("OutboundLink")],1),e._v(" The ABCI's "),o("code",[e._v("Result.Data")]),e._v(" field for\n"),o("code",[e._v("MsgSubmitEvidence")]),e._v(" responses does not contain the raw evidence's hash, but the protobuf encoded\n"),o("code",[e._v("MsgSubmitEvidenceResponse")]),e._v(" struct.")]),e._v(" "),o("li",[e._v("(x/gov) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7533",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7533"),o("OutboundLink")],1),e._v(" The ABCI's "),o("code",[e._v("Result.Data")]),e._v(" field for\n"),o("code",[e._v("MsgSubmitProposal")]),e._v(" responses does not contain a raw binary encoding of the "),o("code",[e._v("proposalID")]),e._v(", but the protobuf encoded\n"),o("code",[e._v("MsgSubmitSubmitProposalResponse")]),e._v(" struct.")]),e._v(" "),o("li",[e._v("(x/gov) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6859",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6859"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("ProposalStatus")]),e._v(" and "),o("code",[e._v("VoteOption")]),e._v(" are now JSON serialized using its protobuf name, so expect names like "),o("code",[e._v("PROPOSAL_STATUS_DEPOSIT_PERIOD")]),e._v(" as opposed to "),o("code",[e._v("DepositPeriod")]),e._v(".")]),e._v(" "),o("li",[e._v("(x/staking) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7499",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7499"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("BondStatus")]),e._v(" is now a protobuf "),o("code",[e._v("enum")]),e._v(" instead\nof an "),o("code",[e._v("int32")]),e._v(", and JSON serialized using its protobuf name, so expect names like "),o("code",[e._v("BOND_STATUS_UNBONDING")]),e._v(" as opposed\nto "),o("code",[e._v("Unbonding")]),e._v(".")]),e._v(" "),o("li",[e._v("(x/staking) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7556",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7556"),o("OutboundLink")],1),e._v(" The ABCI's "),o("code",[e._v("Result.Data")]),e._v(" field for\n"),o("code",[e._v("MsgBeginRedelegate")]),e._v(" and "),o("code",[e._v("MsgUndelegate")]),e._v(" responses does not contain custom binary marshaled "),o("code",[e._v("completionTime")]),e._v(", but the\nprotobuf encoded "),o("code",[e._v("MsgBeginRedelegateResponse")]),e._v(" and "),o("code",[e._v("MsgUndelegateResponse")]),e._v(" structs respectively")])])])]),e._v(" "),o("h3",{attrs:{id:"api-breaking-changes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-changes"}},[e._v("#")]),e._v(" API Breaking Changes")]),e._v(" "),o("ul",[o("li",[o("strong",[e._v("Baseapp / Client")]),e._v(" "),o("ul",[o("li",[e._v("(AppModule) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7518",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7518"),o("OutboundLink")],1),e._v(" "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7584",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7584"),o("OutboundLink")],1),e._v(" Rename "),o("code",[e._v("AppModule.RegisterQueryServices")]),e._v(" to "),o("code",[e._v("AppModule.RegisterServices")]),e._v(", as this method now registers multiple services (the gRPC query service and the protobuf Msg service). A "),o("code",[e._v("Configurator")]),e._v(" struct is used to hold the different services.")]),e._v(" "),o("li",[e._v("(baseapp) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5865",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5865"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("SimulationResponse")]),e._v(" returned from tx simulation is now JSON encoded instead of Amino binary.")]),e._v(" "),o("li",[e._v("(client) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6290",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6290"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("CLIContext")]),e._v(" is renamed to "),o("code",[e._v("Context")]),e._v(". "),o("code",[e._v("Context")]),e._v(" and all related methods have been moved from package context to client.")]),e._v(" "),o("li",[e._v("(client) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6525",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6525"),o("OutboundLink")],1),e._v(" Removed support for "),o("code",[e._v("indent")]),e._v(" in JSON responses. Clients should consider piping to an external tool such as "),o("code",[e._v("jq")]),e._v(".")]),e._v(" "),o("li",[e._v("(client) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/8107",target:"_blank",rel:"noopener noreferrer"}},[e._v("#8107"),o("OutboundLink")],1),e._v(" Renamed "),o("code",[e._v("PrintOutput")]),e._v(" and "),o("code",[e._v("PrintOutputLegacy")]),e._v("\nmethods of the "),o("code",[e._v("context.Client")]),e._v(" object to "),o("code",[e._v("PrintProto")]),e._v(" and "),o("code",[e._v("PrintObjectLegacy")]),e._v(".")]),e._v(" "),o("li",[e._v("(client/flags) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6632",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6632"),o("OutboundLink")],1),e._v(" Remove NewCompletionCmd(), the function is now available in tendermint.")]),e._v(" "),o("li",[e._v("(client/input) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5904",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5904"),o("OutboundLink")],1),e._v(" Removal of unnecessary "),o("code",[e._v("GetCheckPassword")]),e._v(", "),o("code",[e._v("PrintPrefixed")]),e._v(" functions.")]),e._v(" "),o("li",[e._v("(client/keys) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5889",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5889"),o("OutboundLink")],1),e._v(" Rename "),o("code",[e._v("NewKeyBaseFromDir()")]),e._v(" -> "),o("code",[e._v("NewLegacyKeyBaseFromDir()")]),e._v(".")]),e._v(" "),o("li",[e._v("(client/keys) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5820/",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5820"),o("OutboundLink")],1),e._v(" Removed method CloseDB from Keybase interface.")]),e._v(" "),o("li",[e._v("(client/rpc) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6290",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6290"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("client")]),e._v(" package and subdirs reorganization.")]),e._v(" "),o("li",[e._v("(client/lcd) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6290",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6290"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("CliCtx")]),e._v(" of struct "),o("code",[e._v("RestServer")]),e._v(" in package client/lcd has been renamed to "),o("code",[e._v("ClientCtx")]),e._v(".")]),e._v(" "),o("li",[e._v("(codec) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6330",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6330"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("codec.RegisterCrypto")]),e._v(" has been moved to the "),o("code",[e._v("crypto/codec")]),e._v(" package and the global "),o("code",[e._v("codec.Cdc")]),e._v(" Amino instance has been deprecated and moved to the "),o("code",[e._v("codec/legacy_global")]),e._v(" package.")]),e._v(" "),o("li",[e._v("(codec) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/8080",target:"_blank",rel:"noopener noreferrer"}},[e._v("#8080"),o("OutboundLink")],1),e._v(" Updated the "),o("code",[e._v("codec.Marshaler")]),e._v(" interface\n"),o("ul",[o("li",[e._v("Moved "),o("code",[e._v("MarshalAny")]),e._v(" and "),o("code",[e._v("UnmarshalAny")]),e._v(" helper functions to "),o("code",[e._v("codec.Marshaler")]),e._v(" and renamed to "),o("code",[e._v("MarshalInterface")]),e._v(" and\n"),o("code",[e._v("UnmarshalInterface")]),e._v(" respectively. These functions must take interface as a parameter (not a concrete type nor "),o("code",[e._v("Any")]),e._v("\nobject). Underneath they use "),o("code",[e._v("Any")]),e._v(" wrapping for correct protobuf serialization.")])])]),e._v(" "),o("li",[e._v("(crypto) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/6780",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6780"),o("OutboundLink")],1),e._v(" Move ledger code to its own package.")]),e._v(" "),o("li",[e._v("(crypto/types/multisig) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6373",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6373"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("multisig.Multisignature")]),e._v(" has been renamed  to "),o("code",[e._v("AminoMultisignature")])]),e._v(" "),o("li",[e._v("(codec) "),o("code",[e._v("*codec.LegacyAmino")]),e._v(" is now a wrapper around Amino which provides backwards compatibility with protobuf "),o("code",[e._v("Any")]),e._v(". ALL legacy code should use "),o("code",[e._v("*codec.LegacyAmino")]),e._v(" instead of "),o("code",[e._v("*amino.Codec")]),e._v(" directly")]),e._v(" "),o("li",[e._v("(crypto) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5880",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5880"),o("OutboundLink")],1),e._v(" Merge "),o("code",[e._v("crypto/keys/mintkey")]),e._v(" into "),o("code",[e._v("crypto")]),e._v(".")]),e._v(" "),o("li",[e._v("(crypto/hd) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5904",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5904"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("crypto/keys/hd")]),e._v(" moved to "),o("code",[e._v("crypto/hd")]),e._v(".")]),e._v(" "),o("li",[e._v("(crypto/keyring):\n"),o("ul",[o("li",[o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5866",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5866"),o("OutboundLink")],1),e._v(" Rename "),o("code",[e._v("crypto/keys/")]),e._v(" to "),o("code",[e._v("crypto/keyring/")]),e._v(".")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5904",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5904"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("Keybase")]),e._v(" -> "),o("code",[e._v("Keyring")]),e._v(" interfaces migration. "),o("code",[e._v("LegacyKeybase")]),e._v(" interface is added in order\nto guarantee limited backward compatibility with the old Keybase interface for the sole purpose of migrating keys across the new keyring backends. "),o("code",[e._v("NewLegacy")]),e._v("\nconstructor is provided "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5889",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5889"),o("OutboundLink")],1),e._v(" to allow for smooth migration of keys from the legacy LevelDB based implementation\nto new keyring backends. Plus, the package and the new keyring no longer depends on the sdk.Config singleton. Please consult the "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/tree/master/crypto/keyring/doc.go",target:"_blank",rel:"noopener noreferrer"}},[e._v("package documentation"),o("OutboundLink")],1),e._v(" for more\ninformation on how to implement the new "),o("code",[e._v("Keyring")]),e._v(" interface.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5858",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5858"),o("OutboundLink")],1),e._v(" Make Keyring store keys by name and address's hexbytes representation.")])])]),e._v(" "),o("li",[e._v("(export) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5952",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5952"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("AppExporter")]),e._v(" now returns ABCI consensus parameters to be included in marshaled exported state. These parameters must be returned from the application via the "),o("code",[e._v("BaseApp")]),e._v(".")]),e._v(" "),o("li",[e._v("(simapp) Deprecating and renaming "),o("code",[e._v("MakeEncodingConfig")]),e._v(" to "),o("code",[e._v("MakeTestEncodingConfig")]),e._v(" (both in "),o("code",[e._v("simapp")]),e._v(" and "),o("code",[e._v("simapp/params")]),e._v(" packages).")]),e._v(" "),o("li",[e._v("(store) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5803",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5803"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("store.CommitMultiStore")]),e._v(" interface now includes the new "),o("code",[e._v("snapshots.Snapshotter")]),e._v(" interface as well.")]),e._v(" "),o("li",[e._v("(types) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5579",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5579"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("keepRecent")]),e._v(" field has been removed from the "),o("code",[e._v("PruningOptions")]),e._v(" type.\nThe "),o("code",[e._v("PruningOptions")]),e._v(" type now only includes fields "),o("code",[e._v("KeepEvery")]),e._v(" and "),o("code",[e._v("SnapshotEvery")]),e._v(", where "),o("code",[e._v("KeepEvery")]),e._v("\ndetermines which committed heights are flushed to disk and "),o("code",[e._v("SnapshotEvery")]),e._v(" determines which of these\nheights are kept after pruning. The "),o("code",[e._v("IsValid")]),e._v(" method should be called whenever using these options. Methods\n"),o("code",[e._v("SnapshotVersion")]),e._v(" and "),o("code",[e._v("FlushVersion")]),e._v(" accept a version arugment and determine if the version should be\nflushed to disk or kept as a snapshot. Note, "),o("code",[e._v("KeepRecent")]),e._v(" is automatically inferred from the options\nand provided directly the IAVL store.")]),e._v(" "),o("li",[e._v("(types) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5533",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5533"),o("OutboundLink")],1),e._v(" Refactored "),o("code",[e._v("AppModuleBasic")]),e._v(" and "),o("code",[e._v("AppModuleGenesis")]),e._v("\nto now accept a "),o("code",[e._v("codec.JSONMarshaler")]),e._v(" for modular serialization of genesis state.")]),e._v(" "),o("li",[e._v("(types/rest) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5779",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5779"),o("OutboundLink")],1),e._v(" Drop unused Parse{Int64OrReturnBadRequest,QueryParamBool}() functions.")])])]),e._v(" "),o("li",[o("strong",[e._v("Modules")]),e._v(" "),o("ul",[o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7243",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7243"),o("OutboundLink")],1),e._v(" Rename "),o("code",[e._v("RegisterCodec")]),e._v(" to "),o("code",[e._v("RegisterLegacyAminoCodec")]),e._v(" and "),o("code",[e._v("codec.New()")]),e._v(" is now renamed to "),o("code",[e._v("codec.NewLegacyAmino()")])]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6564",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6564"),o("OutboundLink")],1),e._v(" Constant "),o("code",[e._v("DefaultParamspace")]),e._v(" is removed from all modules, use ModuleName instead.")]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5989",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5989"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("AppModuleBasic.GetTxCmd")]),e._v(" now takes a single "),o("code",[e._v("CLIContext")]),e._v(" parameter.")]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5664",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5664"),o("OutboundLink")],1),e._v(" Remove amino "),o("code",[e._v("Codec")]),e._v(" from simulation "),o("code",[e._v("StoreDecoder")]),e._v(", which now returns a function closure in order to unmarshal the key-value pairs.")]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5555",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5555"),o("OutboundLink")],1),e._v(" Move "),o("code",[e._v("x/auth/client/utils/")]),e._v(" types and functions to "),o("code",[e._v("x/auth/client/")]),e._v(".")]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5572",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5572"),o("OutboundLink")],1),e._v(" Move account balance logic and APIs from "),o("code",[e._v("x/auth")]),e._v(" to "),o("code",[e._v("x/bank")]),e._v(".")]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6326",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6326"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("AppModuleBasic.GetQueryCmd")]),e._v(" now takes a single "),o("code",[e._v("client.Context")]),e._v(" parameter.")]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6336",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6336"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("AppModuleBasic.RegisterQueryService")]),e._v(" method was added to support gRPC queries, and "),o("code",[e._v("QuerierRoute")]),e._v(" and "),o("code",[e._v("NewQuerierHandler")]),e._v(" were deprecated.")]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/6311",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6311"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("alias.go")]),e._v(" usage")]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/6447",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6447"),o("OutboundLink")],1),e._v(" Rename "),o("code",[e._v("blacklistedAddrs")]),e._v(" to "),o("code",[e._v("blockedAddrs")]),e._v(".")]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/6834",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6834"),o("OutboundLink")],1),e._v(" Add "),o("code",[e._v("RegisterInterfaces")]),e._v(" method to "),o("code",[e._v("AppModuleBasic")]),e._v(" to support registration of protobuf interface types.")]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/6834",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6734"),o("OutboundLink")],1),e._v(" Add "),o("code",[e._v("TxEncodingConfig")]),e._v(" parameter to "),o("code",[e._v("AppModuleBasic.ValidateGenesis")]),e._v(" command to support JSON tx decoding in "),o("code",[e._v("genutil")]),e._v(".")]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7764",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7764"),o("OutboundLink")],1),e._v(" Added module initialization options:\n"),o("ul",[o("li",[o("code",[e._v("server/types.AppExporter")]),e._v(" requires extra argument: "),o("code",[e._v("AppOptions")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("server.AddCommands")]),e._v(" requires extra argument: "),o("code",[e._v("addStartFlags types.ModuleInitFlags")])]),e._v(" "),o("li",[o("code",[e._v("x/crisis.NewAppModule")]),e._v(" has a new attribute: "),o("code",[e._v("skipGenesisInvariants")]),e._v(". "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7764",target:"_blank",rel:"noopener noreferrer"}},[e._v("PR"),o("OutboundLink")],1)])])]),e._v(" "),o("li",[e._v("(types) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6327",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6327"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("sdk.Msg")]),e._v(" now inherits "),o("code",[e._v("proto.Message")]),e._v(", as a result all "),o("code",[e._v("sdk.Msg")]),e._v(" types now use pointer semantics.")]),e._v(" "),o("li",[e._v("(types) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7032",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7032"),o("OutboundLink")],1),e._v(" All types ending with "),o("code",[e._v("ID")]),e._v(" (e.g. "),o("code",[e._v("ProposalID")]),e._v(") now end with "),o("code",[e._v("Id")]),e._v(" (e.g. "),o("code",[e._v("ProposalId")]),e._v("), to match default Protobuf generated format. Also see "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7033",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7033"),o("OutboundLink")],1),e._v(" for more details.")]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6029",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6029"),o("OutboundLink")],1),e._v(" Module accounts have been moved from "),o("code",[e._v("x/supply")]),e._v(" to "),o("code",[e._v("x/auth")]),e._v(".")]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/6443",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6443"),o("OutboundLink")],1),e._v(" Move "),o("code",[e._v("FeeTx")]),e._v(" and "),o("code",[e._v("TxWithMemo")]),e._v(" interfaces from "),o("code",[e._v("x/auth/ante")]),e._v(" to "),o("code",[e._v("types")]),e._v(".")]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7006",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7006"),o("OutboundLink")],1),e._v(" All "),o("code",[e._v("AccountRetriever")]),e._v(" methods now take "),o("code",[e._v("client.Context")]),e._v(" as a parameter instead of as a struct member.")]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6270",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6270"),o("OutboundLink")],1),e._v(" The passphrase argument has been removed from the signature of the following functions and methods: "),o("code",[e._v("BuildAndSign")]),e._v(", "),o("code",[e._v("MakeSignature")]),e._v(", "),o("code",[e._v("SignStdTx")]),e._v(", "),o("code",[e._v("TxBuilder.BuildAndSign")]),e._v(", "),o("code",[e._v("TxBuilder.Sign")]),e._v(", "),o("code",[e._v("TxBuilder.SignStdTx")])]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/6428",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6428"),o("OutboundLink")],1),e._v(":\n"),o("ul",[o("li",[o("code",[e._v("NewAnteHandler")]),e._v(" and "),o("code",[e._v("NewSigVerificationDecorator")]),e._v(" both now take a "),o("code",[e._v("SignModeHandler")]),e._v(" parameter.")]),e._v(" "),o("li",[o("code",[e._v("SignatureVerificationGasConsumer")]),e._v(" now has the signature: "),o("code",[e._v("func(meter sdk.GasMeter, sig signing.SignatureV2, params types.Params) error")]),e._v(".")]),e._v(" "),o("li",[e._v("The "),o("code",[e._v("SigVerifiableTx")]),e._v(" interface now has a "),o("code",[e._v("GetSignaturesV2() ([]signing.SignatureV2, error)")]),e._v(" method and no longer has the "),o("code",[e._v("GetSignBytes")]),e._v(" method.")])])]),e._v(" "),o("li",[e._v("(x/auth/tx) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/8106",target:"_blank",rel:"noopener noreferrer"}},[e._v("#8106"),o("OutboundLink")],1),e._v(" change related to missing append functionality in\nclient transaction signing\n"),o("ul",[o("li",[e._v("added "),o("code",[e._v("overwriteSig")]),e._v(" argument to "),o("code",[e._v("x/auth/client.SignTx")]),e._v(" and "),o("code",[e._v("client/tx.Sign")]),e._v(" functions.")]),e._v(" "),o("li",[e._v("removed "),o("code",[e._v("x/auth/tx.go:wrapper.GetSignatures")]),e._v(". The "),o("code",[e._v("wrapper")]),e._v(" provides "),o("code",[e._v("TxBuilder")]),e._v(" functionality, and it's a private\nstructure. That function was not used at all and it's not exposed through the "),o("code",[e._v("TxBuilder")]),e._v(" interface.")])])]),e._v(" "),o("li",[e._v("(x/bank) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7327",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7327"),o("OutboundLink")],1),e._v(" AddCoins and SubtractCoins no longer return a resultingValue and will only return an error.")]),e._v(" "),o("li",[e._v("(x/capability) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7918",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7918"),o("OutboundLink")],1),e._v(" Add x/capability safety checks:\n"),o("ul",[o("li",[e._v("All outward facing APIs will now check that capability is not nil and name is not empty before performing any state-machine changes")]),e._v(" "),o("li",[o("code",[e._v("SetIndex")]),e._v(" has been renamed to "),o("code",[e._v("InitializeIndex")])])])]),e._v(" "),o("li",[e._v("(x/evidence) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7251",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7251"),o("OutboundLink")],1),e._v(" New evidence types and light client evidence handling. The module function names changed.")]),e._v(" "),o("li",[e._v("(x/evidence) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5952",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5952"),o("OutboundLink")],1),e._v(" Remove APIs for getting and setting "),o("code",[e._v("x/evidence")]),e._v(" parameters. "),o("code",[e._v("BaseApp")]),e._v(" now uses a "),o("code",[e._v("ParamStore")]),e._v(" to manage Tendermint consensus parameters which is managed via the "),o("code",[e._v("x/params")]),e._v(" "),o("code",[e._v("Substore")]),e._v(" type.")]),e._v(" "),o("li",[e._v("(x/gov) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6147",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6147"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("Content")]),e._v(" field on "),o("code",[e._v("Proposal")]),e._v(" and "),o("code",[e._v("MsgSubmitProposal")]),e._v("\nis now "),o("code",[e._v("Any")]),e._v(" in concordance with "),o("RouterLink",{attrs:{to:"/migration/docs/architecture/adr-019-protobuf-state-encoding.html"}},[e._v("ADR 019")]),e._v(" and "),o("code",[e._v("GetContent")]),e._v(" should now\nbe used to retrieve the actual proposal "),o("code",[e._v("Content")]),e._v(". Also the "),o("code",[e._v("NewMsgSubmitProposal")]),e._v(" constructor now may return an "),o("code",[e._v("error")])],1),e._v(" "),o("li",[e._v("(x/ibc) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6374",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6374"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("VerifyMembership")]),e._v(" and "),o("code",[e._v("VerifyNonMembership")]),e._v(" now take a "),o("code",[e._v("specs []string")]),e._v(" argument to specify the proof format used for verification. Most SDK chains can simply use "),o("code",[e._v("commitmenttypes.GetSDKSpecs()")]),e._v(" for this argument.")]),e._v(" "),o("li",[e._v("(x/params) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5619",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5619"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("x/params")]),e._v(" keeper now accepts a "),o("code",[e._v("codec.Marshaller")]),e._v(" instead of\na reference to an amino codec. Amino is still used for JSON serialization.")]),e._v(" "),o("li",[e._v("(x/staking) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6451",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6451"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("DefaultParamspace")]),e._v(" and "),o("code",[e._v("ParamKeyTable")]),e._v(" in staking module are moved from keeper to types to enforce consistency.")]),e._v(" "),o("li",[e._v("(x/staking) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7419",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7419"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("TmConsPubKey")]),e._v(" method on ValidatorI has been\nremoved and replaced instead by "),o("code",[e._v("ConsPubKey")]),e._v(" (which returns a SDK "),o("code",[e._v("cryptotypes.PubKey")]),e._v(") and "),o("code",[e._v("TmConsPublicKey")]),e._v(" (which\nreturns a Tendermint proto PublicKey).")]),e._v(" "),o("li",[e._v("(x/staking/types) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/7447",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7447"),o("OutboundLink")],1),e._v(" Remove bech32 PubKey support:\n"),o("ul",[o("li",[o("code",[e._v("ValidatorI")]),e._v(" interface update. "),o("code",[e._v("GetConsPubKey")]),e._v(" renamed to "),o("code",[e._v("TmConsPubKey")]),e._v(" (consensus public key must be a tendermint key). "),o("code",[e._v("TmConsPubKey")]),e._v(", "),o("code",[e._v("GetConsAddr")]),e._v(" methods return error.")]),e._v(" "),o("li",[o("code",[e._v("Validator")]),e._v(" update. Methods changed in "),o("code",[e._v("ValidatorI")]),e._v(" (as described above) and "),o("code",[e._v("ToTmValidator")]),e._v(" return error.")]),e._v(" "),o("li",[o("code",[e._v("Validator.ConsensusPubkey")]),e._v(" type changed from "),o("code",[e._v("string")]),e._v(" to "),o("code",[e._v("codectypes.Any")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("MsgCreateValidator.Pubkey")]),e._v(" type changed from "),o("code",[e._v("string")]),e._v(" to "),o("code",[e._v("codectypes.Any")]),e._v(".")])])]),e._v(" "),o("li",[e._v("(x/supply) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6010",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6010"),o("OutboundLink")],1),e._v(" All "),o("code",[e._v("x/supply")]),e._v(" types and APIs have been moved to "),o("code",[e._v("x/bank")]),e._v(".")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6409",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6409"),o("OutboundLink")],1),e._v(" Rename all IsEmpty methods to Empty across the codebase and enforce consistency.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6231",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6231"),o("OutboundLink")],1),e._v(" Simplify "),o("code",[e._v("AppModule")]),e._v(" interface, "),o("code",[e._v("Route")]),e._v(" and "),o("code",[e._v("NewHandler")]),e._v(" methods become only "),o("code",[e._v("Route")]),e._v("\nand returns a new "),o("code",[e._v("Route")]),e._v(" type.")]),e._v(" "),o("li",[e._v("(x/slashing) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6212",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6212"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("Get*")]),e._v(" prefixes from key construction functions")]),e._v(" "),o("li",[e._v("(server) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6079",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6079"),o("OutboundLink")],1),e._v(" Remove "),o("code",[e._v("UpgradeOldPrivValFile")]),e._v(" (deprecated in Tendermint Core v0.28).")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5719",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5719"),o("OutboundLink")],1),e._v(" Bump Go requirement to 1.14+")])])])]),e._v(" "),o("h3",{attrs:{id:"state-machine-breaking"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),o("ul",[o("li",[o("p",[o("strong",[e._v("General")])]),e._v(" "),o("ul",[o("li",[e._v("(client) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7268",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7268"),o("OutboundLink")],1),e._v(" / "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7147",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7147"),o("OutboundLink")],1),e._v(" Introduce new protobuf based PubKeys, and migrate PubKey in BaseAccount to use this new protobuf based PubKey format")])])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("Modules")])]),e._v(" "),o("ul",[o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5572",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5572"),o("OutboundLink")],1),e._v(" Separate balance from accounts per ADR 004.\n"),o("ul",[o("li",[e._v("Account balances are now persisted and retrieved via the "),o("code",[e._v("x/bank")]),e._v(" module.")]),e._v(" "),o("li",[e._v("Vesting account interface has been modified to account for changes.")]),e._v(" "),o("li",[e._v("Callers to "),o("code",[e._v("NewBaseVestingAccount")]),e._v(" are responsible for verifying account balance in relation to\nthe original vesting amount.")]),e._v(" "),o("li",[e._v("The "),o("code",[e._v("SendKeeper")]),e._v(" and "),o("code",[e._v("ViewKeeper")]),e._v(" interfaces in "),o("code",[e._v("x/bank")]),e._v(" have been modified to account for changes.")])])]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5533",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5533"),o("OutboundLink")],1),e._v(" Migrate the "),o("code",[e._v("x/auth")]),e._v(" module to use Protocol Buffers for state\nserialization instead of Amino.\n"),o("ul",[o("li",[e._v("The "),o("code",[e._v("BaseAccount.PubKey")]),e._v(" field is now represented as a Bech32 string instead of a "),o("code",[e._v("crypto.Pubkey")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("NewBaseAccountWithAddress")]),e._v(" now returns a reference to a "),o("code",[e._v("BaseAccount")]),e._v(".")]),e._v(" "),o("li",[e._v("The "),o("code",[e._v("x/auth")]),e._v(" module now accepts a "),o("code",[e._v("Codec")]),e._v(" interface which extends the "),o("code",[e._v("codec.Marshaler")]),e._v(" interface by\nrequiring a concrete codec to know how to serialize accounts.")]),e._v(" "),o("li",[e._v("The "),o("code",[e._v("AccountRetriever")]),e._v(" type now accepts a "),o("code",[e._v("Codec")]),e._v(" in its constructor in order to know how to\nserialize accounts.")])])]),e._v(" "),o("li",[e._v("(x/bank) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6518",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6518"),o("OutboundLink")],1),e._v(" Support for global and per-denomination send enabled flags.\n"),o("ul",[o("li",[e._v("Existing send_enabled global flag has been moved into a Params structure as "),o("code",[e._v("default_send_enabled")]),e._v(".")]),e._v(" "),o("li",[e._v("An array of: "),o("code",[e._v("{denom: string, enabled: bool}")]),e._v(" is added to bank Params to support per-denomination override of global default value.")])])]),e._v(" "),o("li",[e._v("(x/distribution) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5610",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5610"),o("OutboundLink")],1),e._v(" Migrate the "),o("code",[e._v("x/distribution")]),e._v(" module to use Protocol Buffers for state\nserialization instead of Amino. The exact codec used is "),o("code",[e._v("codec.HybridCodec")]),e._v(" which utilizes Protobuf for binary encoding and Amino\nfor JSON encoding.\n"),o("ul",[o("li",[o("code",[e._v("ValidatorHistoricalRewards.ReferenceCount")]),e._v(" is now of types "),o("code",[e._v("uint32")]),e._v(" instead of "),o("code",[e._v("uint16")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("ValidatorSlashEvents")]),e._v(" is now a struct with "),o("code",[e._v("slashevents")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("ValidatorOutstandingRewards")]),e._v(" is now a struct with "),o("code",[e._v("rewards")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("ValidatorAccumulatedCommission")]),e._v(" is now a struct with "),o("code",[e._v("commission")]),e._v(".")]),e._v(" "),o("li",[e._v("The "),o("code",[e._v("Keeper")]),e._v(" constructor now takes a "),o("code",[e._v("codec.Marshaler")]),e._v(" instead of a concrete Amino codec. This exact type\nprovided is specified by "),o("code",[e._v("ModuleCdc")]),e._v(".")])])]),e._v(" "),o("li",[e._v("(x/evidence) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5634",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5634"),o("OutboundLink")],1),e._v(" Migrate the "),o("code",[e._v("x/evidence")]),e._v(" module to use Protocol Buffers for state\nserialization instead of Amino.\n"),o("ul",[o("li",[e._v("The "),o("code",[e._v("internal")]),e._v(" sub-package has been removed in order to expose the types proto file.")]),e._v(" "),o("li",[e._v("The module now accepts a "),o("code",[e._v("Codec")]),e._v(" interface which extends the "),o("code",[e._v("codec.Marshaler")]),e._v(" interface by\nrequiring a concrete codec to know how to serialize "),o("code",[e._v("Evidence")]),e._v(" types.")]),e._v(" "),o("li",[e._v("The "),o("code",[e._v("MsgSubmitEvidence")]),e._v(" message has been removed in favor of "),o("code",[e._v("MsgSubmitEvidenceBase")]),e._v(". The application-level\ncodec must now define the concrete "),o("code",[e._v("MsgSubmitEvidence")]),e._v(" type which must implement the module's "),o("code",[e._v("MsgSubmitEvidence")]),e._v("\ninterface.")])])]),e._v(" "),o("li",[e._v("(x/evidence) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5952",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5952"),o("OutboundLink")],1),e._v(" Remove parameters from "),o("code",[e._v("x/evidence")]),e._v(" genesis and module state. The "),o("code",[e._v("x/evidence")]),e._v(" module now solely uses Tendermint consensus parameters to determine of evidence is valid or not.")]),e._v(" "),o("li",[e._v("(x/gov) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5737",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5737"),o("OutboundLink")],1),e._v(" Migrate the "),o("code",[e._v("x/gov")]),e._v(" module to use Protocol\nBuffers for state serialization instead of Amino.\n"),o("ul",[o("li",[o("code",[e._v("MsgSubmitProposal")]),e._v(" will be removed in favor of the application-level proto-defined "),o("code",[e._v("MsgSubmitProposal")]),e._v(" which\nimplements the "),o("code",[e._v("MsgSubmitProposalI")]),e._v(" interface. Applications should extend the "),o("code",[e._v("NewMsgSubmitProposalBase")]),e._v(" type\nto define their own concrete "),o("code",[e._v("MsgSubmitProposal")]),e._v(" types.")]),e._v(" "),o("li",[e._v("The module now accepts a "),o("code",[e._v("Codec")]),e._v(" interface which extends the "),o("code",[e._v("codec.Marshaler")]),e._v(" interface by\nrequiring a concrete codec to know how to serialize "),o("code",[e._v("Proposal")]),e._v(" types.")])])]),e._v(" "),o("li",[e._v("(x/mint) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5634",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5634"),o("OutboundLink")],1),e._v(" Migrate the "),o("code",[e._v("x/mint")]),e._v(" module to use Protocol Buffers for state\nserialization instead of Amino.\n"),o("ul",[o("li",[e._v("The "),o("code",[e._v("internal")]),e._v(" sub-package has been removed in order to expose the types proto file.")])])]),e._v(" "),o("li",[e._v("(x/slashing) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5627",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5627"),o("OutboundLink")],1),e._v(" Migrate the "),o("code",[e._v("x/slashing")]),e._v(" module to use Protocol Buffers for state\nserialization instead of Amino. The exact codec used is "),o("code",[e._v("codec.HybridCodec")]),e._v(" which utilizes Protobuf for binary encoding and Amino\nfor JSON encoding.\n"),o("ul",[o("li",[e._v("The "),o("code",[e._v("Keeper")]),e._v(" constructor now takes a "),o("code",[e._v("codec.Marshaler")]),e._v(" instead of a concrete Amino codec. This exact type\nprovided is specified by "),o("code",[e._v("ModuleCdc")]),e._v(".")])])]),e._v(" "),o("li",[e._v("(x/staking) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6844",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6844"),o("OutboundLink")],1),e._v(" Validators are now inserted into the unbonding queue based on their unbonding time and height. The relevant keeper APIs are modified to reflect these changes by now also requiring a height.")]),e._v(" "),o("li",[e._v("(x/staking) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6061",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6061"),o("OutboundLink")],1),e._v(" Allow a validator to immediately unjail when no signing info is present due to\nfalling below their minimum self-delegation and never having been bonded. The validator may immediately unjail once they've met their minimum self-delegation.")]),e._v(" "),o("li",[e._v("(x/staking) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5600",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5600"),o("OutboundLink")],1),e._v(" Migrate the "),o("code",[e._v("x/staking")]),e._v(" module to use Protocol Buffers for state\nserialization instead of Amino. The exact codec used is "),o("code",[e._v("codec.HybridCodec")]),e._v(" which utilizes Protobuf for binary encoding and Amino\nfor JSON encoding.\n"),o("ul",[o("li",[o("code",[e._v("BondStatus")]),e._v(" is now of type "),o("code",[e._v("int32")]),e._v(" instead of "),o("code",[e._v("byte")]),e._v(".")]),e._v(" "),o("li",[e._v("Types of "),o("code",[e._v("int16")]),e._v(" in the "),o("code",[e._v("Params")]),e._v(" type are now of type "),o("code",[e._v("int32")]),e._v(".")]),e._v(" "),o("li",[e._v("Every reference of "),o("code",[e._v("crypto.Pubkey")]),e._v(" in context of a "),o("code",[e._v("Validator")]),e._v(" is now of type string. "),o("code",[e._v("GetPubKeyFromBech32")]),e._v(" must be used to get the "),o("code",[e._v("crypto.Pubkey")]),e._v(".")]),e._v(" "),o("li",[e._v("The "),o("code",[e._v("Keeper")]),e._v(" constructor now takes a "),o("code",[e._v("codec.Marshaler")]),e._v(" instead of a concrete Amino codec. This exact type\nprovided is specified by "),o("code",[e._v("ModuleCdc")]),e._v(".")])])]),e._v(" "),o("li",[e._v("(x/staking) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/7979",target:"_blank",rel:"noopener noreferrer"}},[e._v("#7979"),o("OutboundLink")],1),e._v(" keeper pubkey storage serialization migration\nfrom bech32 to protobuf.")]),e._v(" "),o("li",[e._v("(x/supply) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6010",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6010"),o("OutboundLink")],1),e._v(" Removed the "),o("code",[e._v("x/supply")]),e._v(" module by merging the existing types and APIs into the "),o("code",[e._v("x/bank")]),e._v(" module.")]),e._v(" "),o("li",[e._v("(x/supply) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5533",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5533"),o("OutboundLink")],1),e._v(" Migrate the "),o("code",[e._v("x/supply")]),e._v(" module to use Protocol Buffers for state\nserialization instead of Amino.\n"),o("ul",[o("li",[e._v("The "),o("code",[e._v("internal")]),e._v(" sub-package has been removed in order to expose the types proto file.")]),e._v(" "),o("li",[e._v("The "),o("code",[e._v("x/supply")]),e._v(" module now accepts a "),o("code",[e._v("Codec")]),e._v(" interface which extends the "),o("code",[e._v("codec.Marshaler")]),e._v(" interface by\nrequiring a concrete codec to know how to serialize "),o("code",[e._v("SupplyI")]),e._v(" types.")]),e._v(" "),o("li",[e._v("The "),o("code",[e._v("SupplyI")]),e._v(" interface has been modified to no longer return "),o("code",[e._v("SupplyI")]),e._v(" on methods. Instead the\nconcrete type's receiver should modify the type.")])])]),e._v(" "),o("li",[e._v("(x/upgrade) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5659",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5659"),o("OutboundLink")],1),e._v(" Migrate the "),o("code",[e._v("x/upgrade")]),e._v(" module to use Protocol\nBuffers for state serialization instead of Amino.\n"),o("ul",[o("li",[e._v("The "),o("code",[e._v("internal")]),e._v(" sub-package has been removed in order to expose the types proto file.")]),e._v(" "),o("li",[e._v("The "),o("code",[e._v("x/upgrade")]),e._v(" module now accepts a "),o("code",[e._v("codec.Marshaler")]),e._v(" interface.")])])])])])]),e._v(" "),o("h2",{attrs:{id:"v0-39-1-2020-08-11"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-39-1-2020-08-11"}},[e._v("#")]),e._v(" "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.39.1",target:"_blank",rel:"noopener noreferrer"}},[e._v("v0.39.1"),o("OutboundLink")],1),e._v(" - 2020-08-11")]),e._v(" "),o("h3",{attrs:{id:"client-breaking"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#client-breaking"}},[e._v("#")]),e._v(" Client Breaking")]),e._v(" "),o("ul",[o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/6861",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6861"),o("OutboundLink")],1),e._v(" Remove public key Bech32 encoding for all account types for JSON serialization, instead relying on direct Amino encoding. In addition, JSON serialization utilizes Amino instead of the Go stdlib, so integers are treated as strings.")])]),e._v(" "),o("h2",{attrs:{id:"v0-39-0-2020-07-20"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-39-0-2020-07-20"}},[e._v("#")]),e._v(" "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.39.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("v0.39.0"),o("OutboundLink")],1),e._v(" - 2020-07-20")]),e._v(" "),o("h3",{attrs:{id:"api-breaking-changes-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-changes-2"}},[e._v("#")]),e._v(" API Breaking Changes")]),e._v(" "),o("ul",[o("li",[e._v("(baseapp) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/5837",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5837"),o("OutboundLink")],1),e._v(" Transaction simulation now returns a "),o("code",[e._v("SimulationResponse")]),e._v(" which contains the "),o("code",[e._v("GasInfo")]),e._v(" and "),o("code",[e._v("Result")]),e._v(" from the execution.")])]),e._v(" "),o("h3",{attrs:{id:"client-breaking-changes-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#client-breaking-changes-2"}},[e._v("#")]),e._v(" Client Breaking Changes")]),e._v(" "),o("ul",[o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/6745",target:"_blank",rel:"noopener noreferrer"}},[e._v("#6745"),o("OutboundLink")],1),e._v(" Remove BaseAccount's custom JSON {,un}marshalling.")])]),e._v(" "),o("h2",{attrs:{id:"v0-38-5-2020-07-02"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-38-5-2020-07-02"}},[e._v("#")]),e._v(" [v0.38.5] - 2020-07-02")]),e._v(" "),o("h2",{attrs:{id:"v0-38-4-2020-05-21"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-38-4-2020-05-21"}},[e._v("#")]),e._v(" [v0.38.4] - 2020-05-21")]),e._v(" "),o("h2",{attrs:{id:"v0-38-3-2020-04-09"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-38-3-2020-04-09"}},[e._v("#")]),e._v(" [v0.38.3] - 2020-04-09")]),e._v(" "),o("h2",{attrs:{id:"v0-38-2-2020-03-25"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-38-2-2020-03-25"}},[e._v("#")]),e._v(" [v0.38.2] - 2020-03-25")]),e._v(" "),o("h2",{attrs:{id:"v0-38-1-2020-02-11"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-38-1-2020-02-11"}},[e._v("#")]),e._v(" [v0.38.1] - 2020-02-11")]),e._v(" "),o("h2",{attrs:{id:"v0-38-0-2020-01-23"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-38-0-2020-01-23"}},[e._v("#")]),e._v(" [v0.38.0] - 2020-01-23")]),e._v(" "),o("h3",{attrs:{id:"state-machine-breaking-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-2"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),o("ul",[o("li",[e._v("(genesis) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5506",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5506"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("x/distribution")]),e._v(" genesis state\nnow includes "),o("code",[e._v("params")]),e._v(" instead of individual parameters.")]),e._v(" "),o("li",[e._v("(genesis) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5017",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5017"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("x/genaccounts")]),e._v(" module has been\ndeprecated and all components removed except the "),o("code",[e._v("legacy/")]),e._v(" package. This requires changes to the\ngenesis state. Namely, "),o("code",[e._v("accounts")]),e._v(" now exist under "),o("code",[e._v("app_state.auth.accounts")]),e._v(". The corresponding migration\nlogic has been implemented for v0.38 target version. Applications can migrate via:\n"),o("code",[e._v("$ {appd} migrate v0.38 genesis.json")]),e._v(".")]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5299",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5299"),o("OutboundLink")],1),e._v(" Handling of "),o("code",[e._v("ABCIEvidenceTypeDuplicateVote")]),e._v("\nduring "),o("code",[e._v("BeginBlock")]),e._v(" along with the corresponding parameters ("),o("code",[e._v("MaxEvidenceAge")]),e._v(") have moved from the\n"),o("code",[e._v("x/slashing")]),e._v(" module to the "),o("code",[e._v("x/evidence")]),e._v(" module.")])]),e._v(" "),o("h3",{attrs:{id:"api-breaking-changes-3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-changes-3"}},[e._v("#")]),e._v(" API Breaking Changes")]),e._v(" "),o("ul",[o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5506",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5506"),o("OutboundLink")],1),e._v(" Remove individual setters of "),o("code",[e._v("x/distribution")]),e._v(" parameters. Instead, follow the module spec in getting parameters, setting new value(s) and finally calling "),o("code",[e._v("SetParams")]),e._v(".")]),e._v(" "),o("li",[e._v("(types) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5495",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5495"),o("OutboundLink")],1),e._v(" Remove redundant "),o("code",[e._v("(Must)Bech32ify*")]),e._v(" and "),o("code",[e._v("(Must)Get*KeyBech32")]),e._v(" functions in favor of "),o("code",[e._v("(Must)Bech32ifyPubKey")]),e._v(" and "),o("code",[e._v("(Must)GetPubKeyFromBech32")]),e._v(" respectively, both of which take a "),o("code",[e._v("Bech32PubKeyType")]),e._v(" (string).")]),e._v(" "),o("li",[e._v("(types) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5430",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5430"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("DecCoins#Add")]),e._v(" parameter changed from "),o("code",[e._v("DecCoins")]),e._v("\nto "),o("code",[e._v("...DecCoin")]),e._v(", "),o("code",[e._v("Coins#Add")]),e._v(" parameter changed from "),o("code",[e._v("Coins")]),e._v(" to "),o("code",[e._v("...Coin")]),e._v(".")]),e._v(" "),o("li",[e._v("(baseapp/types) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5421",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5421"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("Error")]),e._v(" interface ("),o("code",[e._v("types/errors.go")]),e._v(")\nhas been removed in favor of the concrete type defined in "),o("code",[e._v("types/errors/")]),e._v(" which implements the standard "),o("code",[e._v("error")]),e._v(" interface.\n"),o("ul",[o("li",[e._v("As a result, the "),o("code",[e._v("Handler")]),e._v(" and "),o("code",[e._v("Querier")]),e._v(" implementations now return a standard "),o("code",[e._v("error")]),e._v(".\nWithin "),o("code",[e._v("BaseApp")]),e._v(", "),o("code",[e._v("runTx")]),e._v(" now returns a "),o("code",[e._v("(GasInfo, *Result, error)")]),e._v(" tuple and "),o("code",[e._v("runMsgs")]),e._v(" returns a\n"),o("code",[e._v("(*Result, error)")]),e._v(" tuple. A reference to a "),o("code",[e._v("Result")]),e._v(" is now used to indicate success whereas an error\nsignals an invalid message or failed message execution. As a result, the fields "),o("code",[e._v("Code")]),e._v(", "),o("code",[e._v("Codespace")]),e._v(",\n"),o("code",[e._v("GasWanted")]),e._v(", and "),o("code",[e._v("GasUsed")]),e._v(" have been removed the "),o("code",[e._v("Result")]),e._v(" type. The latter two fields are now found\nin the "),o("code",[e._v("GasInfo")]),e._v(" type which is always returned regardless of execution outcome.")]),e._v(" "),o("li",[e._v("Note to developers: Since all handlers and queriers must now return a standard "),o("code",[e._v("error")]),e._v(", the "),o("code",[e._v("types/errors/")]),e._v("\npackage contains all the relevant and pre-registered errors that you typically work with. A typical\nerror returned will look like "),o("code",[e._v('sdkerrors.Wrap(sdkerrors.ErrUnknownRequest, "...")')]),e._v(". You can retrieve\nrelevant ABCI information from the error via "),o("code",[e._v("ABCIInfo")]),e._v(".")])])]),e._v(" "),o("li",[e._v("(client) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5442",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5442"),o("OutboundLink")],1),e._v(" Remove client/alias.go as it's not necessary and\ncomponents can be imported directly from the packages.")]),e._v(" "),o("li",[e._v("(store) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/4748",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4748"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("CommitMultiStore")]),e._v(" interface\nnow requires a "),o("code",[e._v("SetInterBlockCache")]),e._v(" method. Applications that do not wish to support this can simply\nhave this method perform a no-op.")]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/4665",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4665"),o("OutboundLink")],1),e._v(" Refactored "),o("code",[e._v("x/gov")]),e._v(" module structure and dev-UX:\n"),o("ul",[o("li",[e._v("Prepare for module spec integration")]),e._v(" "),o("li",[e._v("Update gov keys to use big endian encoding instead of little endian")])])]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5017",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5017"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("x/genaccounts")]),e._v(" module has been deprecated and all components removed except the "),o("code",[e._v("legacy/")]),e._v(" package.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/4486",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4486"),o("OutboundLink")],1),e._v(" Vesting account types decoupled from the "),o("code",[e._v("x/auth")]),e._v(" module and now live under "),o("code",[e._v("x/auth/vesting")]),e._v(". Applications wishing to use vesting account types must be sure to register types via "),o("code",[e._v("RegisterCodec")]),e._v(" under the new vesting package.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/4486",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4486"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("NewBaseVestingAccount")]),e._v(" constructor returns an error\nif the provided arguments are invalid.")]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5006",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5006"),o("OutboundLink")],1),e._v(" Modular "),o("code",[e._v("AnteHandler")]),e._v(" via composable decorators:\n"),o("ul",[o("li",[e._v("The "),o("code",[e._v("AnteHandler")]),e._v(" interface now returns "),o("code",[e._v("(newCtx Context, err error)")]),e._v(" instead of "),o("code",[e._v("(newCtx Context, result sdk.Result, abort bool)")])]),e._v(" "),o("li",[e._v("The "),o("code",[e._v("NewAnteHandler")]),e._v(" function returns an "),o("code",[e._v("AnteHandler")]),e._v(" function that returns the new "),o("code",[e._v("AnteHandler")]),e._v("\ninterface and has been moved into the "),o("code",[e._v("auth/ante")]),e._v(" directory.")]),e._v(" "),o("li",[o("code",[e._v("ValidateSigCount")]),e._v(", "),o("code",[e._v("ValidateMemo")]),e._v(", "),o("code",[e._v("ProcessPubKey")]),e._v(", "),o("code",[e._v("EnsureSufficientMempoolFee")]),e._v(", and "),o("code",[e._v("GetSignBytes")]),e._v("\nhave all been removed as public functions.")]),e._v(" "),o("li",[e._v("Invalid Signatures may return "),o("code",[e._v("InvalidPubKey")]),e._v(" instead of "),o("code",[e._v("Unauthorized")]),e._v(" error, since the transaction\nwill first hit "),o("code",[e._v("SetPubKeyDecorator")]),e._v(" before the "),o("code",[e._v("SigVerificationDecorator")]),e._v(" runs.")]),e._v(" "),o("li",[o("code",[e._v("StdTx#GetSignatures")]),e._v(" will return an array of just signature byte slices "),o("code",[e._v("[][]byte")]),e._v(" instead of\nreturning an array of "),o("code",[e._v("StdSignature")]),e._v(" structs. To replicate the old behavior, use the public field\n"),o("code",[e._v("StdTx.Signatures")]),e._v(" to get back the array of StdSignatures "),o("code",[e._v("[]StdSignature")]),e._v(".")])])]),e._v(" "),o("li",[e._v("(modules) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5299",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5299"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("HandleDoubleSign")]),e._v(" along with params "),o("code",[e._v("MaxEvidenceAge")]),e._v(" and "),o("code",[e._v("DoubleSignJailEndTime")]),e._v(" have moved from the "),o("code",[e._v("x/slashing")]),e._v(" module to the "),o("code",[e._v("x/evidence")]),e._v(" module.")]),e._v(" "),o("li",[e._v("(keys) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/4941",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4941"),o("OutboundLink")],1),e._v(" Keybase concrete types constructors such as "),o("code",[e._v("NewKeyBaseFromDir")]),e._v(" and "),o("code",[e._v("NewInMemory")]),e._v(" now accept optional parameters of type "),o("code",[e._v("KeybaseOption")]),e._v(". These\noptional parameters are also added on the keys sub-commands functions, which are now public, and allows\nthese options to be set on the commands or ignored to default to previous behavior.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5547",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5547"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("NewKeyBaseFromHomeFlag")]),e._v(" constructor has been removed.")]),e._v(" "),o("li",[o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5439",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5439"),o("OutboundLink")],1),e._v(" Further modularization was done to the "),o("code",[e._v("keybase")]),e._v("\npackage to make it more suitable for use with different key formats and algorithms:\n"),o("ul",[o("li",[e._v("The "),o("code",[e._v("WithKeygenFunc")]),e._v(" function added as a "),o("code",[e._v("KeybaseOption")]),e._v(" which allows a custom bytes to key\nimplementation to be defined when keys are created.")]),e._v(" "),o("li",[e._v("The "),o("code",[e._v("WithDeriveFunc")]),e._v(" function added as a "),o("code",[e._v("KeybaseOption")]),e._v(" allows custom logic for deriving a key\nfrom a mnemonic, bip39 password, and HD Path.")]),e._v(" "),o("li",[e._v("BIP44 is no longer build into "),o("code",[e._v("keybase.CreateAccount()")]),e._v(". It is however the default when using\nthe "),o("code",[e._v("client/keys")]),e._v(" add command.")]),e._v(" "),o("li",[o("code",[e._v("SupportedAlgos")]),e._v(" and "),o("code",[e._v("SupportedAlgosLedger")]),e._v(" functions return a slice of "),o("code",[e._v("SigningAlgo")]),e._v("s that are\nsupported by the keybase and the ledger integration respectively.")])])]),e._v(" "),o("li",[e._v("(simapp) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5419",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5419"),o("OutboundLink")],1),e._v(" The "),o("code",[e._v("helpers.GenTx()")]),e._v(" now accepts a gas argument.")]),e._v(" "),o("li",[e._v("(baseapp) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/5455",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5455"),o("OutboundLink")],1),e._v(" A "),o("code",[e._v("sdk.Context")]),e._v(" is now passed into the "),o("code",[e._v("router.Route()")]),e._v(" function.")])]),e._v(" "),o("h3",{attrs:{id:"client-breaking-changes-3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#client-breaking-changes-3"}},[e._v("#")]),e._v(" Client Breaking Changes")]),e._v(" "),o("ul",[o("li",[e._v("(rest) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/5270",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5270"),o("OutboundLink")],1),e._v(" All account types now implement custom JSON serialization.")]),e._v(" "),o("li",[e._v("(rest) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/4783",target:"_blank",rel:"noopener noreferrer"}},[e._v("#4783"),o("OutboundLink")],1),e._v(" The balance field in the DelegationResponse type is now sdk.Coin instead of sdk.Int")]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5006",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5006"),o("OutboundLink")],1),e._v(" The gas required to pass the "),o("code",[e._v("AnteHandler")]),e._v(" has\nincreased significantly due to modular "),o("code",[e._v("AnteHandler")]),e._v(" support. Increase GasLimit accordingly.")]),e._v(" "),o("li",[e._v("(rest) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/5336",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5336"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("MsgEditValidator")]),e._v(" uses "),o("code",[e._v("description")]),e._v(" instead of "),o("code",[e._v("Description")]),e._v(" as a JSON key.")]),e._v(" "),o("li",[e._v("(keys) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/pull/5097",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5097"),o("OutboundLink")],1),e._v(" Due to the keybase -> keyring transition, keys need to be migrated. See "),o("code",[e._v("keys migrate")]),e._v(" command for more info.")]),e._v(" "),o("li",[e._v("(x/auth) "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/issues/5424",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5424"),o("OutboundLink")],1),e._v(" Drop "),o("code",[e._v("decode-tx")]),e._v(" command from x/auth/client/cli, duplicate of the "),o("code",[e._v("decode")]),e._v(" command.")])]),e._v(" "),o("h2",{attrs:{id:"v0-37-14-2020-08-12"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#v0-37-14-2020-08-12"}},[e._v("#")]),e._v(" [v0.37.14] - 2020-08-12")]),e._v(" "),o("h1",{attrs:{id:"end"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#end"}},[e._v("#")]),e._v(" - end -")])])}),[],!1,null,null,null);t.default=n.exports}}]);